package {{ .DomainLowerCase }}

type Res struct {
	{{ .Domain }}ID        uint       `json:"id"`
	// FieldName         string      `json:"field_name"`
}

func Resource({{ .DomainLowerCase }} *{{ .Domain }}) (Res, error) {

	resource := Res{
		{{ .Domain }}ID: {{ .DomainLowerCase }.ID,
	}

	return resource, nil
}

func Resources({{ .DomainLowerCase }}s []*{{ .Domain }}) ([]Res, error) {
	if len({{ .DomainLowerCase }}s) == 0 {
		return make([]Res, 0), nil
	}

	var resources []Res
	for _, {{ .DomainLowerCase }} := range {{ .DomainLowerCase }}s {
		res, _ := Resource({{ .DomainLowerCase }})
		resources = append(resources, res)
	}
	return resources, nil
}
